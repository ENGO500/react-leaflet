[{"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\index.js":"1","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\App.js":"2","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\modal.js":"3","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\login.js":"4","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\dashboard.js":"5"},{"size":295,"mtime":1615315341317,"results":"6","hashOfConfig":"7"},{"size":4462,"mtime":1615315341316,"results":"8","hashOfConfig":"7"},{"size":1638,"mtime":1613522223690,"results":"9","hashOfConfig":"7"},{"size":5437,"mtime":1615315341319,"results":"10","hashOfConfig":"7"},{"size":9936,"mtime":1615315341319,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ehhn0x",{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\index.js",["24","25"],"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\App.js",["26","27","28","29"],"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\modal.js",["30","31"],"import React, { useState } from 'react';\r\nimport {\r\n  EuiButton,\r\n  EuiModal,\r\n  EuiModalBody,\r\n  EuiModalFooter,\r\n  EuiModalHeader,\r\n  EuiModalHeaderTitle,\r\n  EuiOverlayMask,\r\n  EuiText,\r\n} from '@elastic/eui';\r\n\r\n\r\nconst ModalExample = ({ modal, toggle, selectedFeature }) => {\r\n\r\n  let modalBox;\r\n\r\n  if (modal) {\r\n    modalBox =\r\n    <EuiOverlayMask onClick={toggle}>\r\n      <EuiModal onClose={toggle}>\r\n      <EuiModalHeader>\r\n        <EuiModalHeaderTitle>Room Information</EuiModalHeaderTitle>\r\n      </EuiModalHeader>\r\n      <EuiModalBody>\r\n          <p>\r\n            <b>Name: </b>\r\n            {selectedFeature &&\r\n              selectedFeature.properties &&\r\n              selectedFeature.properties.name}\r\n          </p>\r\n          <p>\r\n            <b>Room Capacity: </b>\r\n            {selectedFeature &&\r\n              selectedFeature.properties &&\r\n              selectedFeature.properties.roomCapacity}\r\n          </p>\r\n          <p>\r\n            <b>Current Capacity: </b>\r\n            {selectedFeature &&\r\n              selectedFeature.properties &&\r\n              selectedFeature.properties.roomCapacity}\r\n          </p>\r\n          <p>\r\n            <b>Estimated COVID-19 Risk: </b>\r\n            {selectedFeature &&\r\n              selectedFeature.properties &&\r\n              selectedFeature.properties.roomCapacity}\r\n          </p>\r\n      </EuiModalBody>\r\n      <EuiModalFooter>\r\n        <EuiButton onClick={toggle} fill>\r\n          Close\r\n        </EuiButton>\r\n      </EuiModalFooter>\r\n      </EuiModal>\r\n    </EuiOverlayMask>\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {modalBox}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalExample;\r\n",["32","33"],"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\login.js",["34","35","36"],"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\dashboard.js",["37"],{"ruleId":"38","severity":1,"message":"39","line":5,"column":25,"nodeType":"40","messageId":"41","endLine":5,"endColumn":30},{"ruleId":"38","severity":1,"message":"42","line":5,"column":32,"nodeType":"40","messageId":"41","endLine":5,"endColumn":38},{"ruleId":"38","severity":1,"message":"43","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":23},{"ruleId":"38","severity":1,"message":"44","line":15,"column":3,"nodeType":"40","messageId":"41","endLine":15,"endColumn":10},{"ruleId":"38","severity":1,"message":"45","line":17,"column":3,"nodeType":"40","messageId":"41","endLine":17,"endColumn":14},{"ruleId":"38","severity":1,"message":"46","line":18,"column":3,"nodeType":"40","messageId":"41","endLine":18,"endColumn":15},{"ruleId":"38","severity":1,"message":"47","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"38","severity":1,"message":"48","line":10,"column":3,"nodeType":"40","messageId":"41","endLine":10,"endColumn":10},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"38","severity":1,"message":"53","line":2,"column":16,"nodeType":"40","messageId":"41","endLine":2,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":105,"column":50,"nodeType":"56","endLine":105,"endColumn":87},{"ruleId":"54","severity":1,"message":"55","line":139,"column":48,"nodeType":"56","endLine":139,"endColumn":86},{"ruleId":"57","severity":1,"message":"58","line":56,"column":20,"nodeType":"59","messageId":"60","endLine":56,"endColumn":22},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'GeoJSON' is defined but never used.","'useMapEvent' is defined but never used.","'useMapEvents' is defined but never used.","'useState' is defined but never used.","'EuiText' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]