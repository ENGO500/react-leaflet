[{"C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\index.js":"1","C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\App.js":"2","C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\modal.js":"3","C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\loginComponents\\login.js":"4","C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\loginComponents\\dashboard.js":"5","C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\loginComponents\\modalMapDraw.js":"6"},{"size":295,"mtime":1615315841345,"results":"7","hashOfConfig":"8"},{"size":5336,"mtime":1616815783881,"results":"9","hashOfConfig":"8"},{"size":1598,"mtime":1616814925618,"results":"10","hashOfConfig":"8"},{"size":5416,"mtime":1616613164528,"results":"11","hashOfConfig":"8"},{"size":12270,"mtime":1616815764386,"results":"12","hashOfConfig":"8"},{"size":3531,"mtime":1616613164530,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"ryzr2p",{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},"C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\index.js",["31","32"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <App />,\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n",["33","34"],"C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\App.js",["35","36","37","38"],"C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\modal.js",["39"],"C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\loginComponents\\login.js",["40","41","42"],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios'\r\nimport '@elastic/eui/dist/eui_theme_light.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    EuiPage,\r\n    EuiPageBody,\r\n    EuiFieldText,\r\n    EuiButton,\r\n    EuiForm,\r\n    EuiCallOut,\r\n    EuiCard,\r\n    EuiText,\r\n    EuiFieldPassword,\r\n    EuiFlexGroup,\r\n    EuiSpacer,\r\n  } from '@elastic/eui';\r\n\r\n\r\n   const LoginState = () =>{\r\n    const [newUsername, setNewUsername] = useState('')\r\n    const [newPassowrd, setNewPassword] = useState('')\r\n    const [message, setM] = useState('')\r\n    const [lors,setlors] = useState(\"signup\");\r\n\r\n    const history = useHistory();\r\n\r\n    const signupf = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url:'https://engo500.herokuapp.com/user',\r\n            data: {\r\n              username: newUsername,\r\n              password: newPassowrd,\r\n            }\r\n          }).then(res => {\r\n            setM('success')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            setTimeout(()=>setM(''),3000)\r\n          })\r\n          .catch(error => {\r\n            setM('error')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            setTimeout(()=>setM(''),3000)\r\n          })\r\n    }\r\n\r\n    const loginf = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url:'https://engo500.herokuapp.com/login',\r\n            data: {\r\n              username: newUsername,\r\n              password: newPassowrd,\r\n            }\r\n        }).then(res => {\r\n            setM('success')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            window.localStorage.setItem('loggedInUser', JSON.stringify(res))\r\n            setTimeout(()=> history.push('/dashboard'),3000)\r\n          }).catch(error => {\r\n            setM('error')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            setTimeout(()=>setM(''),3000)\r\n          })\r\n\r\n    }\r\n\r\n    if(lors === \"signup\") {\r\n        return (\r\n            <EuiCard style={{maxWidth:'600px', justifyContent:'center',}}>\r\n            {(() => {\r\n                switch (message) {\r\n                case \"success\" : return <EuiCallOut title=\"Signup successful. Please login.\"color=\"success\" iconType=\"user\"></EuiCallOut>\r\n                case \"error\" : return <EuiCallOut title=\"Something went wrong. Please try again.\"color=\"danger\" iconType=\"alert\"></EuiCallOut>\r\n                default: return <></>\r\n                }\r\n            })()}\r\n            <EuiText><h1>Signup</h1></EuiText>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiForm component=\"form\" onSubmit={signupf}>\r\n            <EuiFieldText\r\n                    placeholder=\"Username\"\r\n                    fullWidth\r\n                    value={newUsername}\r\n                    onChange={(e) => setNewUsername(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiFieldPassword\r\n                    placeholder=\"Password\"\r\n                    fullWidth\r\n                    value={newPassowrd}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiButton type=\"submit\">Submit</EuiButton>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiText><p>Already have an account? <a onClick ={()=>{setlors(\"login\")}}>Sign in.</a></p></EuiText>\r\n            </EuiForm>\r\n\r\n        </EuiCard>\r\n        )\r\n    }\r\n    return (\r\n        <EuiCard style={{maxWidth:'600px', justifyContent:'center',}}>\r\n            {(() => {\r\n                switch (message) {\r\n                case \"success\" : return <EuiCallOut title=\"Login successful. Redirecting you to the dashboard.\"color=\"success\" iconType=\"user\"></EuiCallOut>\r\n                case \"error\" : return <EuiCallOut title=\"Something went wrong. Please try again.\"color=\"danger\" iconType=\"alert\"></EuiCallOut>\r\n                default: return <></>\r\n                }\r\n            })()}\r\n            <EuiText><h1>Login</h1></EuiText>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiForm component=\"form\" onSubmit={loginf}>\r\n            <EuiFieldText\r\n                    placeholder=\"Username\"\r\n                    fullWidth\r\n                    value={newUsername}\r\n                    onChange={(e) => setNewUsername(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiFieldPassword\r\n                    placeholder=\"Password\"\r\n                    fullWidth\r\n                    value={newPassowrd}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiButton type=\"submit\">Submit</EuiButton>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiText><p>Don't have an account? <a onClick ={()=>{setlors(\"signup\")}}>Sign up.</a></p></EuiText>\r\n            </EuiForm>\r\n\r\n        </EuiCard>\r\n    )\r\n}\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <EuiPage style={{display:'flex', height:'100vh'}}>\r\n        <EuiPageBody component=\"div\">\r\n            <EuiFlexGroup justifyContent='center' alignItems='center'>\r\n            <LoginState/>\r\n            </EuiFlexGroup>\r\n        </EuiPageBody>\r\n        </EuiPage>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\loginComponents\\dashboard.js",["43"],"import React, {useEffect, useState, Fragment} from 'react';\r\nimport axios from 'axios';\r\nimport MapModal from './modalMapDraw';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '@elastic/eui/dist/eui_theme_light.css';\r\nimport {\r\n    EuiPage,\r\n    EuiPageBody,\r\n    EuiPageSideBar,\r\n    EuiFieldText,\r\n    EuiButton,\r\n    EuiForm,\r\n    EuiCallOut,\r\n    EuiCard,\r\n    EuiText,\r\n    EuiFlexGroup,\r\n    EuiSpacer,\r\n    EuiFlexItem,\r\n    EuiFieldNumber,\r\n    EuiSelect,\r\n    EuiFilePicker,\r\n    EuiHeader,\r\n    EuiHeaderSectionItem,\r\n    EuiHeaderSectionItemButton,\r\n    EuiHeaderLogo,\r\n    EuiHeaderLinks,\r\n    EuiHeaderLink,\r\n    EuiAvatar,\r\n    EuiTabbedContent,\r\n    EuiTitle,\r\n    EuiSideNav,\r\n    EuiIcon,\r\n    EuiToken,\r\n  } from '@elastic/eui';\r\n\r\nconst Dashboard = () => {\r\n\r\n    //Polymap States\r\n    const [isFlyoutVisible, setIsFlyoutVisible] = useState(false);\r\n    const toggle = () => setIsFlyoutVisible(!isFlyoutVisible);\r\n    const [roomPoly, setRoomPoly] = useState([]);\r\n\r\n    //UI States\r\n    const history = useHistory();\r\n    const sections = [\r\n    {\r\n      items: [<EuiHeaderLogo>ENGO 500 Capstone</EuiHeaderLogo>],\r\n      borders: 'right',\r\n    }];\r\n\r\n\r\n    const [isSideNavOpenOnMobile, setisSideNavOpenOnMobile] = useState(false);\r\n    const [selectedItemName, setSelectedItem] = useState(null);\r\n\r\n    const toggleOpenOnMobile = () => {\r\n      setisSideNavOpenOnMobile(!isSideNavOpenOnMobile);\r\n    };\r\n    const selectItem = (name) => {\r\n    setSelectedItem(name);\r\n    };\r\n\r\n    //User States\r\n    const [token,setToken] = useState('')\r\n    const [userID,setUserID] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [allBuildings,setallBuildings] = useState([])\r\n\r\n    //Building States\r\n    const [newlat, setNewLat] = useState('')\r\n    const [newlong, setNewLong] = useState('')\r\n    const [newBuilding, setNewBuilding] = useState('')\r\n    const [buildingM, setbuildingM] = useState('')\r\n\r\n    //Floorplan States\r\n    const [boption, setboption] = useState('')\r\n    const [files, setFiles] = useState({})\r\n    const [fpM, setfpM] = useState('')\r\n\r\n    //Room States\r\n    const [roption, setroption] = useState('')\r\n    const [width,setW] = useState('')\r\n    const [length,setl] = useState('')\r\n    const [height,seth] = useState('')\r\n    const [roomN,setroomN] = useState('')\r\n    const [coords, setcoords] = useState([])\r\n    const [rM, setrM] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        const user = JSON.parse(window.localStorage.getItem('loggedInUser'))\r\n        setUserID(user.data.id)\r\n        setUserName(user.config.data.username)\r\n        setToken(user.data.AcessToken)\r\n      }, [])\r\n\r\n      useEffect(() => {\r\n          if(userID!='') {\r\n          axios({\r\n            method: 'get',\r\n            url:`https://engo500.herokuapp.com/user/${userID}`\r\n        }).then(res => setallBuildings(res.data.buildings))\r\n      }\r\n    },[userID,buildingM])\r\n\r\n    //Polymap store function\r\n    const polyCoords = (index) => {      setRoomPoly(index);   };\r\n\r\n    //Building select options\r\n    const options = allBuildings.map(building => { return {value: building._id, text: building.Name} });\r\n\r\n    const roptions = allBuildings.map(building => { return {value: building.floorplans[0], text: building.Name} });\r\n\r\n    //Building POST function\r\n    const createBuilding = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url:'https://engo500.herokuapp.com/building',\r\n            headers: {'auth-token': token},\r\n            data: {\r\n              userID: userID,\r\n              name: newBuilding,\r\n              lat: newlat,\r\n              lon: newlong,\r\n            }\r\n        }).then(res => {\r\n            setbuildingM('success')\r\n            setNewBuilding('')\r\n            setNewLat('')\r\n            setNewLong('')\r\n            setTimeout(()=>setbuildingM(''),3000)\r\n        }).catch(error => {\r\n            setbuildingM('error')\r\n            setNewBuilding('')\r\n            setNewLat('')\r\n            setNewLong('')\r\n            setTimeout(()=>setbuildingM(''),3000)\r\n          })\r\n}\r\n\r\n //Floorplan Post\r\n const floorplanf = (event) => {\r\n    event.preventDefault();\r\n    let send = new FormData();\r\n    send.append('buildingID',boption)\r\n    send.append('floorplanImage',files[0])\r\n    axios({\r\n        method: 'post',\r\n        url:'https://engo500.herokuapp.com/floorplan',\r\n        data: send,\r\n        headers: {'auth-token': token,'Content-Type': 'multipart/form-data'},\r\n    }).then(res => {\r\n        setfpM('success')\r\n        setFiles({})\r\n        setTimeout(()=>setfpM(''),3000)\r\n    }).catch(error => {\r\n        setfpM('error')\r\n        setFiles({})\r\n        setTimeout(()=>setfpM(''),3000)\r\n    })\r\n}\r\n\r\n//Room POST function\r\nconst createRoom = (event) => {\r\n    event.preventDefault();\r\n    axios({\r\n        method: 'post',\r\n        url:'https://engo500.herokuapp.com/room',\r\n        headers: {'auth-token': token},\r\n        data: {\r\n          roomNumber: roomN,\r\n          floorplanID : roption,\r\n          RoomWidth: width,\r\n          roomHeight: height,\r\n          roomLength: length,\r\n          flipC: coords,\r\n        }\r\n    }).then(res => {\r\n        setrM('success')\r\n        setW('')\r\n        setl('')\r\n        seth('')\r\n        setroomN('')\r\n        setcoords('')\r\n        setTimeout(()=>setrM(''),3000)\r\n    }).catch(error => {\r\n        setrM('error')\r\n        setW('')\r\n        setl('')\r\n        seth('')\r\n        setroomN('')\r\n        setcoords('')\r\n        setTimeout(()=>setrM(''),3000)\r\n      })\r\n    }\r\n\r\n  const tabs = [\r\n  {\r\n    id: 'building--id',\r\n    name: 'New Building',\r\n    content: (\r\n      <Fragment>\r\n        <EuiCard style={{maxWidth:'100%', justifyContent:'center',}}>\r\n        <EuiFlexItem>\r\n        {(() => {\r\n            switch (buildingM) {\r\n            case \"success\" : return <EuiCallOut title=\"Building Created.\"color=\"success\" iconType=\"documentEdit\"></EuiCallOut>\r\n            case \"error\" : return <EuiCallOut title=\"Something went wrong. Please try again.\"color=\"danger\" iconType=\"alert\"></EuiCallOut>\r\n            default: return <></>\r\n            }\r\n        })()}\r\n        <EuiText><h1>Add New Building </h1></EuiText>\r\n        <EuiSpacer></EuiSpacer>\r\n        <EuiForm component=\"form\" onSubmit={createBuilding}>\r\n        <EuiFieldText\r\n                placeholder=\"Building Name\"\r\n                fullWidth\r\n                value={newBuilding}\r\n                onChange={(e) => setNewBuilding(e.target.value)}\r\n            />\r\n        <EuiSpacer></EuiSpacer>\r\n        <EuiFieldNumber\r\n                placeholder=\"Latitude\"\r\n                fullWidth\r\n                value={newlat}\r\n                onChange={(e) => setNewLat(e.target.value)}\r\n            />\r\n         <EuiSpacer></EuiSpacer>\r\n        <EuiFieldNumber\r\n                placeholder=\"Longitude\"\r\n                fullWidth\r\n                value={newlong}\r\n                onChange={(e) => setNewLong(e.target.value)}\r\n            />\r\n            <EuiSpacer></EuiSpacer>\r\n        <EuiButton type=\"submit\" fill>Create Building</EuiButton>\r\n        </EuiForm>\r\n        </EuiFlexItem>\r\n        </EuiCard>\r\n      </Fragment>\r\n    )\r\n  },\r\n  {\r\n    id: 'floor--id',\r\n    name: 'New Floor Plan',\r\n    content: (\r\n      <Fragment>\r\n      <EuiCard style={{maxWidth:'100%', justifyContent:'center',}}>\r\n      <EuiFlexItem>\r\n      {(() => {\r\n          switch (fpM) {\r\n          case \"success\" : return <EuiCallOut title=\"Floor Plan Created.\"color=\"success\" iconType=\"documentEdit\"></EuiCallOut>\r\n          case \"error\" : return <EuiCallOut title=\"Something went wrong. Please try again.\"color=\"danger\" iconType=\"alert\"></EuiCallOut>\r\n          default: return <></>\r\n          }\r\n      })()}\r\n      <EuiText><h1>Add New Floor Plan</h1></EuiText>\r\n      <EuiSpacer></EuiSpacer>\r\n      <EuiForm component=\"form\" onSubmit={floorplanf}>\r\n      <EuiSelect\r\n           options={options}\r\n           value={boption}\r\n           onChange={(e) =>  setboption(e.target.value)}\r\n           />\r\n      <EuiSpacer></EuiSpacer>\r\n      <EuiFilePicker\r\n        id=\"aaaaaaa\"\r\n        multiple\r\n        initialPromptText=\"Select or drag and drop a floor plan file\"\r\n        onChange={(files) => {setFiles(files)}}\r\n\r\n      />\r\n       <EuiSpacer></EuiSpacer>\r\n      <EuiButton type=\"submit\" fill>Create Floor Plan</EuiButton>\r\n      </EuiForm>\r\n      </EuiFlexItem>\r\n      </EuiCard>\r\n      </Fragment>\r\n    )\r\n  },\r\n  {\r\n    id: 'room--id',\r\n    name: 'New Room',\r\n    content: (\r\n      <Fragment>\r\n        <EuiFlexItem>\r\n        <EuiCard style={{maxWidth:'100%', justifyContent:'center',}}>\r\n        {(() => {\r\n            switch (rM) {\r\n            case \"success\" : return <EuiCallOut title=\"Room Created.\"color=\"success\" iconType=\"documentEdit\"></EuiCallOut>\r\n            case \"error\" : return <EuiCallOut title=\"Something went wrong. Please try again.\"color=\"danger\" iconType=\"alert\"></EuiCallOut>\r\n            default: return <></>\r\n            }\r\n        })()}\r\n        <EuiText><h1>Add New Room</h1></EuiText>\r\n        <EuiSpacer></EuiSpacer>\r\n        <EuiForm component=\"form\" onSubmit={createRoom}>\r\n        <EuiSelect\r\n             options={roptions}\r\n             value={roption}\r\n             onChange={(e) =>  setroption(e.target.value)}\r\n             />\r\n        <EuiSpacer></EuiSpacer>\r\n        <EuiFieldText\r\n                placeholder=\"Room Number\"\r\n                fullWidth\r\n                value={roomN}\r\n                onChange={(e) => setroomN(e.target.value)}\r\n            />\r\n        <EuiSpacer></EuiSpacer>\r\n        <EuiFieldNumber\r\n                placeholder=\"Width\"\r\n                fullWidth\r\n                value={width}\r\n                onChange={(e) => setW(e.target.value)}\r\n            />\r\n        <EuiSpacer></EuiSpacer>\r\n        <EuiFieldNumber\r\n                placeholder=\"Length\"\r\n                fullWidth\r\n                value={length}\r\n                onChange={(e) => setl(e.target.value)}\r\n            />\r\n        <EuiSpacer></EuiSpacer>\r\n        <EuiFieldNumber\r\n                placeholder=\"Height\"\r\n                fullWidth\r\n                value={height}\r\n                onChange={(e) => seth(e.target.value)}\r\n            />\r\n        <EuiSpacer></EuiSpacer>\r\n\r\n        <EuiButton id=\"roomButton\" onClick={() => {\r\n          toggle();\r\n        }}>Draw Room Coordinates</EuiButton>\r\n\r\n        <MapModal\r\n        visibility={isFlyoutVisible}\r\n        toggle={toggle}\r\n        polyCoords={polyCoords}\r\n        onPolyConfirm={() => {setcoords(roomPoly)}}\r\n        />\r\n\r\n        <EuiSpacer></EuiSpacer>\r\n\r\n        <EuiFieldText\r\n                placeholder=\"Room Coordinates\"\r\n                fullWidth\r\n                value={coords}\r\n        />\r\n\r\n        <EuiSpacer></EuiSpacer>\r\n\r\n        <EuiButton type=\"submit\" fill>Create Room</EuiButton>\r\n        </EuiForm>\r\n        </EuiCard>\r\n        </EuiFlexItem>\r\n      </Fragment>\r\n    )\r\n  }\r\n];\r\n\r\n    return (\r\n        <>\r\n        <EuiHeader position='static'>\r\n          <EuiHeaderSectionItem border=\"right\">\r\n            <EuiHeaderLogo>Elastic</EuiHeaderLogo>\r\n          </EuiHeaderSectionItem>\r\n          <EuiHeaderSectionItem>\r\n            <EuiHeaderLinks>\r\n              <EuiHeaderLink isActive onClick={() => {history.push('/dashboard')}}>Dashboard</EuiHeaderLink>\r\n              <EuiHeaderLink onClick={() => {history.push('/')}}>World Map</EuiHeaderLink>\r\n              <EuiHeaderLink onClick={() => {history.push('/')}}>GitHub</EuiHeaderLink>\r\n            </EuiHeaderLinks>\r\n          </EuiHeaderSectionItem>\r\n\r\n          <EuiHeaderSectionItemButton>\r\n            <EuiButton id=\"button\" onClick={() => {history.push('/login')}}>Log in or Register</EuiButton>\r\n          </EuiHeaderSectionItemButton>\r\n\r\n        </EuiHeader>\r\n        <EuiPage style={{width: '90%', display:'flex', height:'100vh', margin:'auto'}}>\r\n\r\n\r\n        <EuiPageBody component=\"div\">\r\n        <EuiText><h1>DASHBOARD</h1></EuiText>\r\n\r\n        <EuiTabbedContent\r\n          tabs={tabs}\r\n          initialSelectedTab={tabs[1]}\r\n          autoFocus=\"selected\"\r\n          onTabClick={(tab) => {\r\n            console.log('clicked tab', tab);\r\n          }}\r\n        />\r\n\r\n        </EuiPageBody>\r\n        </EuiPage>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\mikko\\leafletReact\\capstone_test\\src\\loginComponents\\modalMapDraw.js",["44","45","46","47","48","49","50","51","52"],"import React, { useRef, useState } from 'react';\r\nimport { L } from 'leaflet';\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  Circle,\r\n  Marker,\r\n  Popup,\r\n  ImageOverlay,\r\n  Polygon,\r\n  GeoJSON,\r\n  FeatureGroup,\r\n} from 'react-leaflet';\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport {\r\n  EuiButton,\r\n  EuiFlyout,\r\n  EuiFlyoutHeader,\r\n  EuiFlyoutBody,\r\n  EuiText,\r\n  EuiTitle,\r\n} from '@elastic/eui';\r\n\r\nimport './modalMapDraw.css';\r\n\r\n\r\nconst MapModal = ({ visibility, toggle, polyCoords, onPolyConfirm }) => {\r\n\r\n  let flyoutContent;\r\n\r\n  let mapBounds =  [[0,0],[330,255]];\r\n\r\n  const editRef = useRef();\r\n\r\n  const [drawing, setDrawing] = useState(false);\r\n\r\n  const handleClick = () => {\r\n\r\n      //Edit this method to perform other actions\r\n\r\n      if (!drawing) {\r\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\r\n      } else {\r\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\r\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\r\n      }\r\n      setDrawing(!drawing)\r\n  }\r\n\r\n\r\n  const onShapeDrawn = (e) => {\r\n      setDrawing(false)\r\n\r\n      const polyArray = e.layer._latlngs[0].map(index => {\r\n        return [index.lat,index.lng];\r\n      });\r\n\r\n      polyCoords(polyArray);\r\n\r\n      e.layer.on('click', () => {\r\n          editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\r\n      })\r\n      e.layer.on('contextmenu', () => {\r\n          //do some contextmenu action here\r\n      })\r\n      e.layer.bindTooltip(\"Text\",\r\n          {\r\n            className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\r\n            sticky: true,\r\n            direction: 'right'\r\n          }\r\n      );\r\n  }\r\n\r\n  if (visibility) {\r\n    flyoutContent =\r\n    <EuiFlyout\r\n        ownFocus\r\n        onClose={toggle}\r\n        size=\"l\"\r\n        aria-labelledby=\"flyoutLargeTitle\">\r\n        <EuiFlyoutHeader hasBorder>\r\n          <EuiTitle size=\"m\">\r\n            <h2 id=\"flyoutLargeTitle\">Draw Room Polygons</h2>\r\n          </EuiTitle>\r\n        </EuiFlyoutHeader>\r\n        <EuiFlyoutBody id=\"cont\">\r\n          <EuiButton id=\"roomButton\" onClick={onPolyConfirm()}>Save Room Coordinates</EuiButton>\r\n          <div id=\"flyMapContainer\">\r\n            <Map bounds={mapBounds} zoom={13}>\r\n              <ImageOverlay\r\n                url ={\"https://engo500.s3-us-west-2.amazonaws.com/0001.jpg\"}\r\n                bounds={mapBounds}\r\n                zoom={15}\r\n              />\r\n              <FeatureGroup>\r\n                  <EditControl\r\n                  ref={editRef}\r\n                  position='topleft'\r\n                  onCreated={onShapeDrawn}\r\n                  //here you can specify your shape options and which handler you want to enable\r\n                  draw={{\r\n                      rectangle: false,\r\n                      circle: false,\r\n                      polyline: false,\r\n                      circlemarker: false,\r\n                      marker: false,\r\n                      polygon: {\r\n                          allowIntersection: false,\r\n                          shapeOptions: {\r\n                              color: \"#000000\"\r\n                          },\r\n                      }\r\n                  }}\r\n                  />\r\n              </FeatureGroup>\r\n              </Map>\r\n          </div>\r\n        </EuiFlyoutBody>\r\n      </EuiFlyout>\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    {flyoutContent}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapModal;\r\n",{"ruleId":"53","severity":1,"message":"54","line":5,"column":25,"nodeType":"55","messageId":"56","endLine":5,"endColumn":30},{"ruleId":"53","severity":1,"message":"57","line":5,"column":32,"nodeType":"55","messageId":"56","endLine":5,"endColumn":38},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"53","severity":1,"message":"62","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":23},{"ruleId":"53","severity":1,"message":"63","line":15,"column":3,"nodeType":"55","messageId":"56","endLine":15,"endColumn":10},{"ruleId":"53","severity":1,"message":"64","line":17,"column":3,"nodeType":"55","messageId":"56","endLine":17,"endColumn":14},{"ruleId":"53","severity":1,"message":"65","line":18,"column":3,"nodeType":"55","messageId":"56","endLine":18,"endColumn":15},{"ruleId":"53","severity":1,"message":"66","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"67","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":104,"column":50,"nodeType":"70","endLine":104,"endColumn":87},{"ruleId":"68","severity":1,"message":"69","line":138,"column":48,"nodeType":"70","endLine":138,"endColumn":86},{"ruleId":"71","severity":1,"message":"72","line":61,"column":20,"nodeType":"73","messageId":"74","endLine":61,"endColumn":22},{"ruleId":"53","severity":1,"message":"75","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":11},{"ruleId":"53","severity":1,"message":"76","line":5,"column":3,"nodeType":"55","messageId":"56","endLine":5,"endColumn":12},{"ruleId":"53","severity":1,"message":"77","line":6,"column":3,"nodeType":"55","messageId":"56","endLine":6,"endColumn":9},{"ruleId":"53","severity":1,"message":"78","line":7,"column":3,"nodeType":"55","messageId":"56","endLine":7,"endColumn":9},{"ruleId":"53","severity":1,"message":"79","line":8,"column":3,"nodeType":"55","messageId":"56","endLine":8,"endColumn":8},{"ruleId":"53","severity":1,"message":"80","line":10,"column":3,"nodeType":"55","messageId":"56","endLine":10,"endColumn":10},{"ruleId":"53","severity":1,"message":"63","line":11,"column":3,"nodeType":"55","messageId":"56","endLine":11,"endColumn":10},{"ruleId":"53","severity":1,"message":"81","line":20,"column":3,"nodeType":"55","messageId":"56","endLine":20,"endColumn":10},{"ruleId":"53","severity":1,"message":"82","line":37,"column":9,"nodeType":"55","messageId":"56","endLine":37,"endColumn":20},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'BrowserRouter' is defined but never used.","'GeoJSON' is defined but never used.","'useMapEvent' is defined but never used.","'useMapEvents' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'L' is defined but never used.","'TileLayer' is defined but never used.","'Circle' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'Polygon' is defined but never used.","'EuiText' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]