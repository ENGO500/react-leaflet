[{"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\index.js":"1","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\App.js":"2","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\login.js":"3","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\dashboard.js":"4","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\modal.js":"5","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\modalMapDraw.js":"6"},{"size":295,"mtime":1615315409062,"results":"7","hashOfConfig":"8"},{"size":3822,"mtime":1615940124073,"results":"9","hashOfConfig":"8"},{"size":5416,"mtime":1615930625291,"results":"10","hashOfConfig":"8"},{"size":10666,"mtime":1616793795656,"results":"11","hashOfConfig":"8"},{"size":1807,"mtime":1616794239125,"results":"12","hashOfConfig":"8"},{"size":3531,"mtime":1615930625291,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1ehhn0x",{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\index.js",["31","32"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <App />,\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n",["33","34"],"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\App.js",["35","36","37","38","39"],"import React, { useState, useEffect } from 'react';\r\nimport './App.css'\r\nimport Login from './loginComponents/login';\r\nimport Dashboard from './loginComponents/dashboard';\r\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  ImageOverlay,\r\n  Polygon,\r\n  GeoJSON,\r\n  FeatureGroup,\r\n  useMapEvent,\r\n  useMapEvents,\r\n} from 'react-leaflet'\r\n\r\nimport {\r\n  EuiButton,\r\n  EuiPage,\r\n  EuiPageSideBar,\r\n  EuiText,\r\n  EuiTitle,\r\n  EuiSpacer\r\n} from '@elastic/eui';\r\n\r\nimport ModalExample from \"./modal.js\"\r\n\r\n\r\n//Import JSON file\r\nconst roomData = require('./geojson.json');\r\n\r\nconst GetData = (props) => {\r\n\r\n  const [buildings,setBuildings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      url:`https://engo500.herokuapp.com/building`\r\n  }).then(res => setBuildings(res.data))\r\n  }, [])\r\n\r\n  return (\r\n     buildings.map(points => <Marker position={[points.lat,points.lon]} riseOnHover=\"true\">\r\n        <Popup>\r\n         Name: {points.Name} <br /><br />\r\n         <EuiButton onClick={() => {\r\n           props.changeView(); \r\n           props.globalToLocal(points)\r\n           }}>View</EuiButton>\r\n       </Popup>\r\n     </Marker>)\r\n  )\r\n\r\n}\r\n\r\nfunction DisplayGeoJSONData(props) {\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedFeature, setSelectedFeature] = useState({});\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const room = props.room;\r\n  return (\r\n  <>\r\n  {room.map((feature, index) => {\r\n    return (\r\n      <FeatureGroup key={index}>\r\n        <Popup>\r\n          <p>{feature.roomNumber}</p>\r\n          <EuiButton id=\"button\"\r\n          onClick={() => {\r\n            toggle(true);\r\n            setSelectedFeature(feature);\r\n          }}\r\n          >\r\n          More Info\r\n          </EuiButton>\r\n        </Popup>\r\n        <Polygon\r\n          positions={feature.flipC}\r\n        />\r\n        <ModalExample\r\n        modal={modal}\r\n        toggle={toggle}\r\n        selectedFeature={selectedFeature}\r\n        />\r\n      </FeatureGroup>\r\n    );\r\n  })}\r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet DisplayMap = () => {\r\n\r\n  const [mapState,setMap] = useState(false);\r\n  const [Url,setUrl] = useState('');\r\n  let position = [51.0447,-114.0719]\r\n  let mapBounds =  [[0,0],[330,255]];\r\n\r\n  const globalToLocal = (index) => {\r\n    setUrl(index);\r\n  };\r\n\r\n  const history = useHistory();\r\n  \r\n  return (\r\n    <EuiPage>\r\n    <EuiPageSideBar>\r\n      <EuiTitle><h3>ENGO 500 Capstone</h3></EuiTitle>\r\n      <EuiText>\r\n      <EuiButton id=\"button\" onClick={() => {history.push('/login')}}>Log in or Register</EuiButton>\r\n\r\n      <EuiSpacer></EuiSpacer>\r\n      {mapState\r\n      ? <EuiButton id=\"toggleMap\" onClick={() => setMap(false)}>Close Local Map</EuiButton>\r\n      : <></>\r\n      }\r\n      </EuiText>\r\n    </EuiPageSideBar>\r\n      {mapState\r\n      ?<div class=\"leaflet-container\">\r\n      <Map zoom={15} bounds={mapBounds}>\r\n        <ImageOverlay\r\n          url = {Url.floorplans[0].floorplanImage}\r\n          bounds={mapBounds}\r\n          zoom={10}\r\n        />\r\n        <DisplayGeoJSONData room={Url.floorplans[0].rooms} />\r\n      </Map>\r\n      </div>\r\n      :<Map center={position} zoom={13}>\r\n        <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n        <GetData changeView={() => setMap(true)} globalToLocal={globalToLocal}></GetData>\r\n      </Map>\r\n      }\r\n    </EuiPage>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div >\r\n      <Switch>\r\n      <Route path=\"/\" component={DisplayMap} exact />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/dashboard\" component={Dashboard} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\login.js",["40","41","42"],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios'\r\nimport '@elastic/eui/dist/eui_theme_light.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    EuiPage,\r\n    EuiPageBody,\r\n    EuiFieldText,\r\n    EuiButton,\r\n    EuiForm,\r\n    EuiCallOut,\r\n    EuiCard,\r\n    EuiText,\r\n    EuiFieldPassword,\r\n    EuiFlexGroup,\r\n    EuiSpacer,\r\n  } from '@elastic/eui';\r\n\r\n\r\n   const LoginState = () =>{\r\n    const [newUsername, setNewUsername] = useState('')\r\n    const [newPassowrd, setNewPassword] = useState('')\r\n    const [message, setM] = useState('')\r\n    const [lors,setlors] = useState(\"signup\");\r\n\r\n    const history = useHistory();\r\n\r\n    const signupf = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url:'https://engo500.herokuapp.com/user',\r\n            data: {\r\n              username: newUsername,\r\n              password: newPassowrd,\r\n            }\r\n          }).then(res => {\r\n            setM('success')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            setTimeout(()=>setM(''),3000)\r\n          })\r\n          .catch(error => {\r\n            setM('error')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            setTimeout(()=>setM(''),3000)\r\n          })\r\n    }\r\n\r\n    const loginf = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url:'https://engo500.herokuapp.com/login',\r\n            data: {\r\n              username: newUsername,\r\n              password: newPassowrd,\r\n            }\r\n        }).then(res => {\r\n            setM('success')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            window.localStorage.setItem('loggedInUser', JSON.stringify(res))\r\n            setTimeout(()=> history.push('/dashboard'),3000)\r\n          }).catch(error => {\r\n            setM('error')\r\n            setNewUsername('')\r\n            setNewPassword('')\r\n            setTimeout(()=>setM(''),3000)\r\n          })\r\n\r\n    }\r\n\r\n    if(lors === \"signup\") {\r\n        return (\r\n            <EuiCard style={{maxWidth:'600px', justifyContent:'center',}}>\r\n            {(() => {\r\n                switch (message) {\r\n                case \"success\" : return <EuiCallOut title=\"Signup successful. Please login.\"color=\"success\" iconType=\"user\"></EuiCallOut>\r\n                case \"error\" : return <EuiCallOut title=\"Something went wrong. Please try again.\"color=\"danger\" iconType=\"alert\"></EuiCallOut>\r\n                default: return <></>\r\n                }\r\n            })()}\r\n            <EuiText><h1>Signup</h1></EuiText>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiForm component=\"form\" onSubmit={signupf}>\r\n            <EuiFieldText\r\n                    placeholder=\"Username\"\r\n                    fullWidth\r\n                    value={newUsername}\r\n                    onChange={(e) => setNewUsername(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiFieldPassword\r\n                    placeholder=\"Password\"\r\n                    fullWidth\r\n                    value={newPassowrd}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiButton type=\"submit\">Submit</EuiButton>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiText><p>Already have an account? <a onClick ={()=>{setlors(\"login\")}}>Sign in.</a></p></EuiText>\r\n            </EuiForm>\r\n\r\n        </EuiCard>\r\n        )\r\n    }\r\n    return (\r\n        <EuiCard style={{maxWidth:'600px', justifyContent:'center',}}>\r\n            {(() => {\r\n                switch (message) {\r\n                case \"success\" : return <EuiCallOut title=\"Login successful. Redirecting you to the dashboard.\"color=\"success\" iconType=\"user\"></EuiCallOut>\r\n                case \"error\" : return <EuiCallOut title=\"Something went wrong. Please try again.\"color=\"danger\" iconType=\"alert\"></EuiCallOut>\r\n                default: return <></>\r\n                }\r\n            })()}\r\n            <EuiText><h1>Login</h1></EuiText>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiForm component=\"form\" onSubmit={loginf}>\r\n            <EuiFieldText\r\n                    placeholder=\"Username\"\r\n                    fullWidth\r\n                    value={newUsername}\r\n                    onChange={(e) => setNewUsername(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiFieldPassword\r\n                    placeholder=\"Password\"\r\n                    fullWidth\r\n                    value={newPassowrd}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n                <EuiSpacer></EuiSpacer>\r\n            <EuiButton type=\"submit\">Submit</EuiButton>\r\n            <EuiSpacer></EuiSpacer>\r\n            <EuiText><p>Don't have an account? <a onClick ={()=>{setlors(\"signup\")}}>Sign up.</a></p></EuiText>\r\n            </EuiForm>\r\n\r\n        </EuiCard>\r\n    )\r\n}\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <EuiPage style={{display:'flex', height:'100vh'}}>\r\n        <EuiPageBody component=\"div\">\r\n            <EuiFlexGroup justifyContent='center' alignItems='center'>\r\n            <LoginState/>\r\n            </EuiFlexGroup>\r\n        </EuiPageBody>\r\n        </EuiPage>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\dashboard.js",["43"],"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\modal.js",["44"],"C:\\Users\\Comma\\Desktop\\Capstone Folder\\react-leaflet\\src\\loginComponents\\modalMapDraw.js",["45","46","47","48","49","50","51","52","53"],"import React, { useRef, useState } from 'react';\r\nimport { L } from 'leaflet';\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  Circle,\r\n  Marker,\r\n  Popup,\r\n  ImageOverlay,\r\n  Polygon,\r\n  GeoJSON,\r\n  FeatureGroup,\r\n} from 'react-leaflet';\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport {\r\n  EuiButton,\r\n  EuiFlyout,\r\n  EuiFlyoutHeader,\r\n  EuiFlyoutBody,\r\n  EuiText,\r\n  EuiTitle,\r\n} from '@elastic/eui';\r\n\r\nimport './modalMapDraw.css';\r\n\r\n\r\nconst MapModal = ({ visibility, toggle, polyCoords, onPolyConfirm }) => {\r\n\r\n  let flyoutContent;\r\n\r\n  let mapBounds =  [[0,0],[330,255]];\r\n\r\n  const editRef = useRef();\r\n\r\n  const [drawing, setDrawing] = useState(false);\r\n\r\n  const handleClick = () => {\r\n\r\n      //Edit this method to perform other actions\r\n\r\n      if (!drawing) {\r\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\r\n      } else {\r\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\r\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\r\n      }\r\n      setDrawing(!drawing)\r\n  }\r\n\r\n\r\n  const onShapeDrawn = (e) => {\r\n      setDrawing(false)\r\n\r\n      const polyArray = e.layer._latlngs[0].map(index => {\r\n        return [index.lat,index.lng];\r\n      });\r\n\r\n      polyCoords(polyArray);\r\n\r\n      e.layer.on('click', () => {\r\n          editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\r\n      })\r\n      e.layer.on('contextmenu', () => {\r\n          //do some contextmenu action here\r\n      })\r\n      e.layer.bindTooltip(\"Text\",\r\n          {\r\n            className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\r\n            sticky: true,\r\n            direction: 'right'\r\n          }\r\n      );\r\n  }\r\n\r\n  if (visibility) {\r\n    flyoutContent =\r\n    <EuiFlyout\r\n        ownFocus\r\n        onClose={toggle}\r\n        size=\"l\"\r\n        aria-labelledby=\"flyoutLargeTitle\">\r\n        <EuiFlyoutHeader hasBorder>\r\n          <EuiTitle size=\"m\">\r\n            <h2 id=\"flyoutLargeTitle\">Draw Room Polygons</h2>\r\n          </EuiTitle>\r\n        </EuiFlyoutHeader>\r\n        <EuiFlyoutBody id=\"cont\">\r\n          <EuiButton id=\"roomButton\" onClick={onPolyConfirm()}>Save Room Coordinates</EuiButton>\r\n          <div id=\"flyMapContainer\">\r\n            <Map bounds={mapBounds} zoom={13}>\r\n              <ImageOverlay\r\n                url ={\"https://engo500.s3-us-west-2.amazonaws.com/0001.jpg\"}\r\n                bounds={mapBounds}\r\n                zoom={15}\r\n              />\r\n              <FeatureGroup>\r\n                  <EditControl\r\n                  ref={editRef}\r\n                  position='topleft'\r\n                  onCreated={onShapeDrawn}\r\n                  //here you can specify your shape options and which handler you want to enable\r\n                  draw={{\r\n                      rectangle: false,\r\n                      circle: false,\r\n                      polyline: false,\r\n                      circlemarker: false,\r\n                      marker: false,\r\n                      polygon: {\r\n                          allowIntersection: false,\r\n                          shapeOptions: {\r\n                              color: \"#000000\"\r\n                          },\r\n                      }\r\n                  }}\r\n                  />\r\n              </FeatureGroup>\r\n              </Map>\r\n          </div>\r\n        </EuiFlyoutBody>\r\n      </EuiFlyout>\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    {flyoutContent}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapModal;\r\n",{"ruleId":"54","severity":1,"message":"55","line":5,"column":25,"nodeType":"56","messageId":"57","endLine":5,"endColumn":30},{"ruleId":"54","severity":1,"message":"58","line":5,"column":32,"nodeType":"56","messageId":"57","endLine":5,"endColumn":38},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"54","severity":1,"message":"63","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":23},{"ruleId":"54","severity":1,"message":"64","line":15,"column":3,"nodeType":"56","messageId":"57","endLine":15,"endColumn":10},{"ruleId":"54","severity":1,"message":"65","line":17,"column":3,"nodeType":"56","messageId":"57","endLine":17,"endColumn":14},{"ruleId":"54","severity":1,"message":"66","line":18,"column":3,"nodeType":"56","messageId":"57","endLine":18,"endColumn":15},{"ruleId":"54","severity":1,"message":"67","line":34,"column":7,"nodeType":"56","messageId":"57","endLine":34,"endColumn":15},{"ruleId":"54","severity":1,"message":"68","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":104,"column":50,"nodeType":"71","endLine":104,"endColumn":87},{"ruleId":"69","severity":1,"message":"70","line":138,"column":48,"nodeType":"71","endLine":138,"endColumn":86},{"ruleId":"72","severity":1,"message":"73","line":61,"column":20,"nodeType":"74","messageId":"75","endLine":61,"endColumn":22},{"ruleId":"54","severity":1,"message":"76","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"77","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":11},{"ruleId":"54","severity":1,"message":"78","line":5,"column":3,"nodeType":"56","messageId":"57","endLine":5,"endColumn":12},{"ruleId":"54","severity":1,"message":"79","line":6,"column":3,"nodeType":"56","messageId":"57","endLine":6,"endColumn":9},{"ruleId":"54","severity":1,"message":"80","line":7,"column":3,"nodeType":"56","messageId":"57","endLine":7,"endColumn":9},{"ruleId":"54","severity":1,"message":"81","line":8,"column":3,"nodeType":"56","messageId":"57","endLine":8,"endColumn":8},{"ruleId":"54","severity":1,"message":"82","line":10,"column":3,"nodeType":"56","messageId":"57","endLine":10,"endColumn":10},{"ruleId":"54","severity":1,"message":"64","line":11,"column":3,"nodeType":"56","messageId":"57","endLine":11,"endColumn":10},{"ruleId":"54","severity":1,"message":"83","line":20,"column":3,"nodeType":"56","messageId":"57","endLine":20,"endColumn":10},{"ruleId":"54","severity":1,"message":"84","line":37,"column":9,"nodeType":"56","messageId":"57","endLine":37,"endColumn":20},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'BrowserRouter' is defined but never used.","'GeoJSON' is defined but never used.","'useMapEvent' is defined but never used.","'useMapEvents' is defined but never used.","'roomData' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'L' is defined but never used.","'TileLayer' is defined but never used.","'Circle' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'Polygon' is defined but never used.","'EuiText' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]